<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 12 Sep 2017 22:45:36 +0800</pubDate>
    <lastBuildDate>Tue, 12 Sep 2017 22:45:36 +0800</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>Jsonpath_note</title>
        <description>&lt;p&gt;layout: post
title:  “JsonPath基本功能使用”
date:   2017-09-12 15:03:25
categories: original&lt;/p&gt;

&lt;p&gt;JsonPath 提供了强大的 json 解析功能。&lt;/p&gt;

&lt;p&gt;项目文档中提供了 jsonpath 对 json 的基本解析功能。详情参考 https://github.com/json-path/JsonPath。&lt;/p&gt;

&lt;p&gt;测试 demo 数据
&lt;code&gt;json
{
    &quot;store&quot;: {
        &quot;book&quot;: [
            {
                &quot;category&quot;: &quot;reference&quot;,
                &quot;author&quot;: &quot;Nigel Rees&quot;,
                &quot;title&quot;: &quot;Sayings of the Century&quot;,
                &quot;price&quot;: 8.95
            },
            {
                &quot;category&quot;: &quot;fiction&quot;,
                &quot;author&quot;: &quot;Evelyn Waugh&quot;,
                &quot;title&quot;: &quot;Sword of Honour&quot;,
                &quot;price&quot;: 12.99
            },
            {
                &quot;category&quot;: &quot;fiction&quot;,
                &quot;author&quot;: &quot;Herman Melville&quot;,
                &quot;title&quot;: &quot;Moby Dick&quot;,
                &quot;isbn&quot;: &quot;0-553-21311-3&quot;,
                &quot;price&quot;: 8.99
            },
            {
                &quot;category&quot;: &quot;fiction&quot;,
                &quot;author&quot;: &quot;J. R. R. Tolkien&quot;,
                &quot;title&quot;: &quot;The Lord of the Rings&quot;,
                &quot;isbn&quot;: &quot;0-395-19395-8&quot;,
                &quot;price&quot;: 22.99
            }
        ],
        &quot;bicycle&quot;: {
            &quot;color&quot;: &quot;red&quot;,
            &quot;price&quot;: 19.95
        }
    },
    &quot;expensive&quot;: 10
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;配置Option.AS_PATH_LIST参数，返回 匹配jsonpath的所有 json 节点。&lt;/p&gt;

&lt;p&gt;``` java
Configuration conf = Configuration.builder().options(Option.AS_PATH_LIST).build();
List&lt;string&gt; pathList = JsonPath.using(conf).parse(jsonStr).read(&quot;$..title&quot;);&lt;/string&gt;&lt;/p&gt;

&lt;p&gt;```
配置 MappingProvider，返回特定 PoJo 类型&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java
Configuration configuration = Configuration.builder().jsonProvider(new GsonJsonProvider()).mappingProvider(new GsonMappingProvider()).build();
        List&amp;lt;String&amp;gt; titles = JsonPath.using(configuration).parse(jsonStr).read(&quot;$.store.book[*].title&quot;, new TypeRef&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;(){});
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;配置Option.DEFAULT_PATH_LEAF_TO_NULL，找不到节点值时返回 null。避免抛出PathNotFoundException&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java
Configuration configuration = Configuration.defaultConfiguration().addOptions(Option.DEFAULT_PATH_LEAF_TO_NULL);
String author4 = JsonPath.using(configuration).parse(jsonStr).read(&quot;$.store.book[0].author1&quot;);
&lt;/code&gt;
配置Option.ALWAYS_RETURN_LIST，返回list&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java
        configuration = Configuration.defaultConfiguration().addOptions(Option.ALWAYS_RETURN_LIST);
        List&amp;lt;String&amp;gt; author0List = JsonPath.using(configuration).parse(jsonStr).read(&quot;$.store.book[0].author&quot;);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;通过JsonPath新增和修改节点值。
set(jsonPath,value)方法用于修改 jsonpath 的 value 值。
put(jsonPath, key, value)方法在 jsonpath层次新增一个节点key，值为 value。
add(jsonPath, object)方法用于Array 类型的 jsonpath 新增一个item。object 为 item 的完整 jsonObject。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java
 Object json = new JsonParser().parse(jsonStr).getAsJsonObject();
        Configuration configuration =
                Configuration.builder().jsonProvider(new GsonJsonProvider()).mappingProvider(new GsonMappingProvider()).build();
        DocumentContext context = JsonPath.using(configuration).parse(json);
        context.set(JsonPath.compile(&quot;$.store.book[0].title&quot;), &quot;test_title&quot;);
        context.put(JsonPath.compile(&quot;$.store.bicycle&quot;), &quot;newNode&quot;, &quot;newNode_value&quot;);
        context.add(JsonPath.compile(&quot;$.store.book&quot;), new JsonParser().parse(&quot;{\&quot;category\&quot;:\&quot;test1\&quot;,\&quot;title\&quot;:\&quot;test_title_1\&quot;}&quot;).getAsJsonObject());
&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 12 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/2017/09/12/jsonpath-note.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2017/09/12/jsonpath-note.html</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 05 Sep 2017 09:46:27 +0800</pubDate>
        <link>http://yourdomain.com/jekyll/update/2017/09/05/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2017/09/05/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
